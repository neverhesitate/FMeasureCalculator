/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fmeasurecalculator;

import java.util.ArrayList;
import java.util.List;

/**
 * FMeasureTester
 * @author funlu
 */
public class FMeasureTester {
    public static void main(String[] args){
        System.out.print("**************  Cluster Result F-Measure Calculator START  **************\n");
        //List<ClusterInstance> instances = buildTestInstance1();
        //List<ClusterInstance> instances = buildTestInstance2();
        //List<ClusterInstance> instances = buildTestInstance3();
        //List<ClusterInstance> instances = buildSimpleKmeans3Instance();
        List<ClusterInstance> instances = buildEM3Instance();
        //List<ClusterInstance> instances = buildSimpleKmeans4Instance();
        //List<ClusterInstance> instances = buildEM4Instance();
        //List<ClusterInstance> instances = buildSimpleKmeans5Instance();
        //List<ClusterInstance> instances = buildEM5Instance();
        FMeasureCalculator fMeasureCalculator = new FMeasureCalculator(instances);
        System.out.print("TotalPairs: "+fMeasureCalculator.calculateTotalPairs()+"\n");
        System.out.print("TN: "+fMeasureCalculator.calculateTNv1()+"\n");
        System.out.print("FN: "+fMeasureCalculator.calculateFN()+"\n");
        //System.out.print("TP+FP: "+fMeasureCalculator.calculateTPandFP(instances)+"\n");
        System.out.print("TP: "+fMeasureCalculator.calculateTPv1()+"\n");
        System.out.print("FP: "+fMeasureCalculator.calculateFP()+"\n");
        System.out.print("Precision: "+fMeasureCalculator.calculatePrecision()+"\n");
        System.out.print("Recall: "+fMeasureCalculator.calculateRecall()+"\n");
        System.out.print("FMeasure: "+fMeasureCalculator.calculateFMeasure()+"\n");
        System.out.print("**************  Cluster Result F-Measure Calculator END  **************\n");
    }
    //Reference http://nlp.stanford.edu/IR-book/html/htmledition/evaluation-of-clustering-1.html
    public static List<ClusterInstance> buildTestInstance1(){
       List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
       ClusterInstance c0 = new ClusterInstance("x");
       ClusterMember m00 = new ClusterMember();
       m00.setMemberName("x");
       m00.setMemberCount(5);
       c0.addMember(m00);
       ClusterMember m01 = new ClusterMember();
       m01.setMemberName("+");
       m01.setMemberCount(1);
       c0.addMember(m01);
       ClusterMember m02 = new ClusterMember();
       m02.setMemberName("^");
       m02.setMemberCount(1);
       c0.addMember(m02);
       c0.setTotalInstances(7);
       toReturn.add(c0);
       ClusterInstance c1 = new ClusterInstance("+");
       ClusterMember m10 = new ClusterMember();
       m10.setMemberName("+");
       m10.setMemberCount(6);
       c1.addMember(m10);
       ClusterMember m11 = new ClusterMember();
       m11.setMemberName("x");
       m11.setMemberCount(1);
       c1.addMember(m11);
       c1.setTotalInstances(7);
       toReturn.add(c1);
       ClusterInstance c2 = new ClusterInstance("^");
       ClusterMember m20 = new ClusterMember();
       m20.setMemberName("^");
       m20.setMemberCount(4);
       c2.addMember(m20);
       ClusterMember m21 = new ClusterMember();
       m21.setMemberName("+");
       m21.setMemberCount(2);
       c2.addMember(m21);
       c2.setTotalInstances(6);
       toReturn.add(c2);
       return toReturn;
    }
    //Reference Social Data Mining. by Reza Zafarani Mohammad Ali Abbasi Huan Liu
    public static List<ClusterInstance> buildTestInstance2(){
       List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
       ClusterInstance c0 = new ClusterInstance("x");
       ClusterMember m00 = new ClusterMember();
       m00.setMemberName("x");
       m00.setMemberCount(5);
       c0.addMember(m00);
       ClusterMember m01 = new ClusterMember();
       m01.setMemberName("0");
       m01.setMemberCount(1);
       c0.addMember(m01);
       c0.setTotalInstances(6);
       toReturn.add(c0);
       ClusterInstance c1 = new ClusterInstance("0");
       ClusterMember m10 = new ClusterMember();
       m10.setMemberName("0");
       m10.setMemberCount(4);
       c1.addMember(m10);
       ClusterMember m11 = new ClusterMember();
       m11.setMemberName("x");
       m11.setMemberCount(1);
       c1.addMember(m11);
       ClusterMember m12 = new ClusterMember();
       m12.setMemberName("^");
       m12.setMemberCount(1);
       c1.addMember(m12);
       c1.setTotalInstances(6);
       toReturn.add(c1);
       ClusterInstance c2 = new ClusterInstance("^");
       ClusterMember m20 = new ClusterMember();
       m20.setMemberName("^");
       m20.setMemberCount(3);
       c2.addMember(m20);
       ClusterMember m21 = new ClusterMember();
       m21.setMemberName("x");
       m21.setMemberCount(2);
       c2.addMember(m21);
       c2.setTotalInstances(5);
       toReturn.add(c2);
       return toReturn;
    }
    public static List<ClusterInstance> buildTestInstance3(){
       List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
       ClusterInstance c0 = new ClusterInstance("x");
       ClusterMember m00 = new ClusterMember();
       m00.setMemberName("x");
       m00.setMemberCount(5);
       c0.addMember(m00);
       ClusterMember m01 = new ClusterMember();
       m01.setMemberName("0");
       m01.setMemberCount(1);
       c0.addMember(m01);
       c0.setTotalInstances(6);
       toReturn.add(c0);
       ClusterInstance c1 = new ClusterInstance("0");
       ClusterMember m10 = new ClusterMember();
       m10.setMemberName("0");
       m10.setMemberCount(4);
       c1.addMember(m10);
       ClusterMember m11 = new ClusterMember();
       m11.setMemberName("x");
       m11.setMemberCount(1);
       c1.addMember(m11);
       ClusterMember m12 = new ClusterMember();
       m12.setMemberName("^");
       m12.setMemberCount(1);
       c1.addMember(m12);
       c1.setTotalInstances(6);
       toReturn.add(c1);
       ClusterInstance c2 = new ClusterInstance("^");
       ClusterMember m20 = new ClusterMember();
       m20.setMemberName("^");
       m20.setMemberCount(3);
       c2.addMember(m20);
       ClusterMember m21 = new ClusterMember();
       m21.setMemberName("x");
       m21.setMemberCount(2);
       c2.addMember(m21);
       c2.setTotalInstances(5);
       toReturn.add(c2);
       ClusterInstance c3 = new ClusterInstance("+");
       ClusterMember m30 = new ClusterMember();
       m30.setMemberName("+");
       m30.setMemberCount(3);
       c3.addMember(m30);
       ClusterMember m31 = new ClusterMember();
       m31.setMemberName("x");
       m31.setMemberCount(2);
       c3.addMember(m21);
       c3.setTotalInstances(5);
       toReturn.add(c3);
       return toReturn;
    }
    
    public static List<ClusterInstance> buildSimpleKmeans4Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("scg");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("cts");
        m00.setMemberCount(37);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("psxwl");
        m01.setMemberCount(10);
        c0.addMember(m01);
        ClusterMember m02 = new ClusterMember();
        m02.setMemberName("scg");
        m02.setMemberCount(40);
        c0.addMember(m02);
        c0.setTotalInstances(87);
        toReturn.add(c0);
        ClusterInstance c1 = new ClusterInstance("ieccf");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("ieccf");
        m10.setMemberCount(104);
        c1.addMember(m10);
        c1.setTotalInstances(104);
        toReturn.add(c1);
        ClusterInstance c2 = new ClusterInstance("com");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("com");
        m20.setMemberCount(103);
        c2.addMember(m20);
        c2.setTotalInstances(103);
        toReturn.add(c2);
        ClusterInstance c3 = new ClusterInstance("spdrouter");
        ClusterMember m30 = new ClusterMember();
        m30.setMemberName("mgw");
        m30.setMemberCount(68);
        c3.addMember(m30);
        ClusterMember m31 = new ClusterMember();
        m31.setMemberName("mrf");
        m31.setMemberCount(39);
        c3.addMember(m31);
        ClusterMember m32 = new ClusterMember();
        m32.setMemberName("spdrouter");
        m32.setMemberCount(99);
        c3.addMember(m32);
        c3.setTotalInstances(206);
        toReturn.add(c3);
        return toReturn;
    } 
    
    public static List<ClusterInstance> buildEM4Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("com");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("com");
        m00.setMemberCount(100);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("mgw");
        m01.setMemberCount(68);
        c0.addMember(m01);
        ClusterMember m02 = new ClusterMember();
        m02.setMemberName("spdrouter");
        m02.setMemberCount(97);
        c0.addMember(m02);
        c0.setTotalInstances(265);
        toReturn.add(c0);
        ClusterInstance c1 = new ClusterInstance("ieccf");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("ieccf");
        m10.setMemberCount(104);
        c1.addMember(m10);
        c1.setTotalInstances(104);
        toReturn.add(c1);
        ClusterInstance c2 = new ClusterInstance("scg");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("scg");
        m20.setMemberCount(40);
        c2.addMember(m20);
        ClusterMember m21 = new ClusterMember();
        m21.setMemberName("cts");
        m21.setMemberCount(37);
        c2.addMember(m21);
        c2.setTotalInstances(77);
        toReturn.add(c2);
        ClusterInstance c3 = new ClusterInstance("mrf");
        ClusterMember m30 = new ClusterMember();
        m30.setMemberName("mrf");
        m30.setMemberCount(39);
        c3.addMember(m30);
        ClusterMember m31 = new ClusterMember();
        m31.setMemberName("psxwl");
        m31.setMemberCount(10);
        c3.addMember(m31);
        ClusterMember m32 = new ClusterMember();
        m32.setMemberName("spdrouter");
        m32.setMemberCount(2);
        c3.addMember(m32);
        ClusterMember m33 = new ClusterMember();
        m33.setMemberName("com");
        m33.setMemberCount(3);
        c3.addMember(m33);
        c3.setTotalInstances(54);
        toReturn.add(c3);
        return toReturn;
    } 
    
    public static List<ClusterInstance> buildSimpleKmeans5Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("scg");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("cts");
        m00.setMemberCount(37);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("scg");
        m01.setMemberCount(40);
        c0.addMember(m01);
        c0.setTotalInstances(77);
        toReturn.add(c0);
        ClusterInstance c1 = new ClusterInstance("ieccf");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("ieccf");
        m10.setMemberCount(104);
        c1.addMember(m10);
        c1.setTotalInstances(104);
        toReturn.add(c1);
        ClusterInstance c2 = new ClusterInstance("com");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("com");
        m20.setMemberCount(103);
        c2.addMember(m20);
        c2.setTotalInstances(103);
        toReturn.add(c2);
        ClusterInstance c3 = new ClusterInstance("spdrouter");
        ClusterMember m30 = new ClusterMember();
        m30.setMemberName("mgw");
        m30.setMemberCount(68);
        c3.addMember(m30);
        ClusterMember m31 = new ClusterMember();
        m31.setMemberName("spdrouter");
        m31.setMemberCount(99);
        c3.addMember(m31);
        c3.setTotalInstances(167);
        toReturn.add(c3);
        ClusterInstance c4 = new ClusterInstance("mrf");
        ClusterMember m40 = new ClusterMember();
        m40.setMemberName("mrf");
        m40.setMemberCount(39);
        c4.addMember(m40);
        ClusterMember m41 = new ClusterMember();
        m41.setMemberName("psxwl");
        m41.setMemberCount(10);
        c4.addMember(m41);
        c4.setTotalInstances(49);
        toReturn.add(c4);
        return toReturn;
    }
    
    public static List<ClusterInstance> buildEM5Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("com");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("com");
        m00.setMemberCount(103);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("mgw");
        m01.setMemberCount(68);
        c0.addMember(m01);
        ClusterMember m02 = new ClusterMember();
        m02.setMemberName("spdrouter");
        m02.setMemberCount(98);
        c0.addMember(m02);
        c0.setTotalInstances(269);
        toReturn.add(c0);
        ClusterInstance c1 = new ClusterInstance("mrf");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("mrf");
        m10.setMemberCount(39);
        c1.addMember(m10);
        c1.setTotalInstances(39);
        toReturn.add(c1);
        ClusterInstance c2 = new ClusterInstance("ieccf");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("ieccf");
        m20.setMemberCount(104);
        c2.addMember(m20);
        c2.setTotalInstances(104);
        toReturn.add(c2);
        ClusterInstance c3 = new ClusterInstance("scg");
        ClusterMember m30 = new ClusterMember();
        m30.setMemberName("scg");
        m30.setMemberCount(40);
        c3.addMember(m30);
        ClusterMember m31 = new ClusterMember();
        m31.setMemberName("cts");
        m31.setMemberCount(37);
        c3.addMember(m31);
        ClusterMember m32 = new ClusterMember();
        m32.setMemberName("spdrouter");
        m32.setMemberCount(1);
        c3.addMember(m32);
        c3.setTotalInstances(78);
        toReturn.add(c3);
        ClusterInstance c4 = new ClusterInstance("psxwl");
        ClusterMember m40 = new ClusterMember();
        m40.setMemberName("psxwl");
        m40.setMemberCount(10);
        c4.addMember(m40);
        c4.setTotalInstances(10);
        toReturn.add(c4);
        return toReturn;
    } 
    
    public static List<ClusterInstance> buildSimpleKmeans3Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("scg");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("cts");
        m00.setMemberCount(37);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("scg");
        m01.setMemberCount(40);
        c0.addMember(m01);
        ClusterMember m02 = new ClusterMember();
        m02.setMemberName("psxwl");
        m02.setMemberCount(10);
        c0.addMember(m02);
        c0.setTotalInstances(87);
        toReturn.add(c0);
        ClusterInstance c1 = new ClusterInstance("ieccf");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("ieccf");
        m10.setMemberCount(104);
        c1.addMember(m10);
        c1.setTotalInstances(104);
        toReturn.add(c1);
        ClusterInstance c2 = new ClusterInstance("com");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("com");
        m20.setMemberCount(103);
        c2.addMember(m20);
        ClusterMember m21 = new ClusterMember();
        m21.setMemberName("mgw");
        m21.setMemberCount(68);
        c2.addMember(m21);
        ClusterMember m22 = new ClusterMember();
        m22.setMemberName("mrf");
        m22.setMemberCount(39);
        c2.addMember(m22);
        ClusterMember m23 = new ClusterMember();
        m23.setMemberName("spdrouter");
        m23.setMemberCount(99);
        c2.addMember(m23);
        c2.setTotalInstances(309);
        toReturn.add(c2);
        return toReturn;
    }
    
    public static List<ClusterInstance> buildEM3Instance(){
        List<ClusterInstance> toReturn = new ArrayList<ClusterInstance>();
        ClusterInstance c0 = new ClusterInstance("scg");
        ClusterMember m00 = new ClusterMember();
        m00.setMemberName("com");
        m00.setMemberCount(2);
        c0.addMember(m00);
        ClusterMember m01 = new ClusterMember();
        m01.setMemberName("cts");
        m01.setMemberCount(37);
        c0.addMember(m01);
        ClusterMember m02 = new ClusterMember();
        m02.setMemberName("ieccf");
        m02.setMemberCount(6);
        c0.addMember(m02);
        ClusterMember m03 = new ClusterMember();
        m03.setMemberName("mrf");
        m03.setMemberCount(5);
        c0.addMember(m03);
        ClusterMember m04 = new ClusterMember();
        m04.setMemberName("psxwl");
        m04.setMemberCount(10);
        c0.addMember(m04);
        ClusterMember m05 = new ClusterMember();
        m05.setMemberName("scg");
        m05.setMemberCount(40);
        c0.addMember(m05);
        ClusterMember m06 = new ClusterMember();
        m06.setMemberName("spdrouter");
        m06.setMemberCount(2);
        c0.addMember(m06);
        c0.setTotalInstances(102);
        toReturn.add(c0);
        
        ClusterInstance c1 = new ClusterInstance("com");
        ClusterMember m10 = new ClusterMember();
        m10.setMemberName("com");
        m10.setMemberCount(101);
        c1.addMember(m10);
        ClusterMember m11 = new ClusterMember();
        m11.setMemberName("mgw");
        m11.setMemberCount(68);
        c1.addMember(m11);
        ClusterMember m12 = new ClusterMember();
        m12.setMemberName("mrf");
        m12.setMemberCount(34);
        c1.addMember(m12);
        ClusterMember m13 = new ClusterMember();
        m13.setMemberName("spdrouter");
        m13.setMemberCount(97);
        c1.addMember(m13);
        c1.setTotalInstances(300);
        toReturn.add(c1);
        
        ClusterInstance c2 = new ClusterInstance("ieccf");
        ClusterMember m20 = new ClusterMember();
        m20.setMemberName("ieccf");
        m20.setMemberCount(98);
        c2.addMember(m20);
        c2.setTotalInstances(98);
        toReturn.add(c2);
        return toReturn;
    }
}
